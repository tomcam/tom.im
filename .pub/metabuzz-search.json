[
]
[
]
[
]
[
]
[
{"path":"/Users/tom/code/tom.im/.pub/tutorials/index.html","title":"Tutorials","body":"Tutorials\nInstalling Ranger on MacOS"}
,
{"path":"/Users/tom/code/tom.im/.pub/tutorials/ranger-macos-bash.html","title":"Installing the Ranger file manager on MacOS under Bash","body":"Installing the Ranger file manager on MacOS under  Bash\nPicture of the Ranger file manager\nAn insanely fast file manager/viewer with Vim key bindings? Sign me up for Ranger ! Problem is, I'm not used to installing these character-mode thingies from source on MacOS.  Here are my notes on how to get that job  done.\nExecutive  summary\n\n\nUse Python to install the Pip package manager. Obviously, skip this step if you already have Pip  installed.\n\nAdd Python and Pip to the  path\n\nUse Pip to install  Ranger\n\nFinally, sit back and have your socks blasted right off your feet by Ranger's  speed\nI assume you have a recent version of MacOS, which has an acceptable version of Python on it, though you'll get grumblings that's not the  case.\nInstalling  Pip\nYes, I know, this is elementary stuff. Hey, I didn't have these steps memorized. I'm a Go programmer,  not a Python guru !\nPip  is the Python package manager. To install it, drop to the Terminal and run this  command:\n\nCurl is technically a web browser, but instead of rendering the HTML graphically it makes a copy of the web page as a file. The command above gets a copy of the Python source for  Pip and copies it into your MacOS Downloads  directory.\n\n\nChange to the Downloads  directory:\n\nInstall Pip using  Python\n\n\nRun Python on the get-pip.py  program to install  Pip:\n\nPip warns darkly that Python 2.7 has a limited lifespan. You'll  see something like  this:\n\nAdd Python and Pip to the  path\nLet's get this on the path so you can just type ranger  to start Ranger when the time  comes. We'll do this by making sure you can run Python scripts like an executable, without having to precede the name with python . That means appending the Pythong  directory to your PATH  environment  variable.\nOn MacOS you do this on ~/.bash_profile  instead of ~/.bashrc , so  this differs from the Ranger  docs.\nEdit ~/.bash_ profile\n\n\nFire up your favorite editor and load ~/.bash_profile . Here's an example using  Vim:\n\n\n\nAdd this to the bottom of the  file:\n\nRun source to export those changes into your current  environment\nNormally the change you just made wouldn't be available unless you exited Terminal and opened up a new  instance.\n\n\nSave some time by running source  on the Bash profile you just  created:\n\nNow Pip will be available from the command  line.\nInstall  Ranger\nFinally, we can install Ranger  itself:\n\nAnd now you can run it from the command line anywhere on your  system:\n\nHome"}
]
[
]
[
]
[
]
[
]
[
]
[
]
[
]
[
]
[
{"path":"/Users/tom/code/tom.im/.pub/foo.html","title":"This is foo.md","body":"This is  foo.md\nDon't get too  excited"}
,
{"path":"/Users/tom/code/tom.im/.pub/index-light.html","title":"metabuzz: Title needed here, squib","body":"Theme: {{ .FrontMatter.Theme }}. See this page in dark mode  and another article using the pillar theme .\n\n{{ inc \"common|mdemo.md\"  }}\nLatest\nA command-line CSS validator that supports custom properties"}
,
{"path":"/Users/tom/code/tom.im/.pub/index.html","title":"metabuzz: Title needed here, squib","body":"Theme: {{ .FrontMatter.Theme }}. See this page in light mode  and another article using the pillar theme .\n\n{{ inc \"common|mdemo.md\"  }}\nLatest\nA command-line CSS validator that supports custom properties"}
]
[
{"path":"/Users/tom/code/tom.im/.pub/articles/css-validator-light.html","title":"A Command-line CSS validator for \"modern\" CSS","body":"Theme: {{ .FrontMatter.Theme }}. See this page in dark mode  or go back\n\nA Command-line CSS validator for \"modern\"  CSS\nI am working on a project with hundreds of CSS files to  maintain. Using the web-based W3C CSS Validation Service  stopped being an option when I started to use CSS custom properties, which look like  this:\n\nThey're applied using var  like  this:\n\nWhile custom properties have been in CSS for well-nigh a decade, the interactive W3C validator online doesn't support them. Further, running checks at the command line is faster and more convenient for  me.\nNu HTML checker to the rescue,  almost\nTo make a long story short, there appear to be no easily available CSS checkers that operate from the command line and also support custom properties. But the Nu HTML checker  does work from the command line, and it supports custom properties even though its web-based counterpart  doesn't.\nDownloading a compiled  version\nYou don't have to compile from source. You can get a compiled version of the Nu HTML checker from the validator releases  page.\nAs a Mac user specifically, I used the version at https://github.com/validator/validator/releases/tag/20.6.30  but of course versions change. Your mileage may  vary.\nNu HTML checker did the trick pretty well except for line numbers. It expects an HTML file, which means the CSS errors are displaced. Plus I just wanted to check pure CSS files, not an HTML file. The solution was obviously something along the lines of \"create a temporary HTML file, insert the CSS, and do the  validation.\"\nCreating a one-line HTML  file\nIn order to get the error messages to yield correct line numbers, the answer was to create the temp HTML in a single line, insert the CSS, and run the validation. I created a script that works for Bash or  zsh:\nfile:  v.sh\n\n\n\nYou save that as v.sh  or whatever and make it  executable:\n\n\n\nThen put it on the path if you wish; on my system I placed it in /usr/local/bin :\n\nSo if your file is named layout.css  you'd  invoke:\n\nThe script generates a file with the name hardcoded to VNU_CHECK.HTML  because that name is unlikely to collide with any other filename, so you can put it in .gitignore  or otherwise delete it at will. The inline HTML contains the CSS file so error messages give you the right line  number.\nThe Nu HMTL Checker error messages are that rarest kind, because they are detailed and relevant. I've run it hundreds of times and so far it hasn't been wrong or misleading. Mad props to whoever wrote  it.\n\nWhen you're finished delete VNU_CHECK.HTML .\n{{ inc \"common|mdemo.md\"  }}"}
,
{"path":"/Users/tom/code/tom.im/.pub/articles/css-validator.html","title":"A Command-line CSS validator for \"modern\" CSS","body":"Theme: {{ .FrontMatter.Theme }}. See this page in light mode  or go back\n\nA Command-line CSS validator for \"modern\"  CSS\nI am working on a project with hundreds of CSS files to  maintain. Using the web-based W3C CSS Validation Service  stopped being an option when I started to use CSS custom properties, which look like  this:\n\nThey're applied using var  like  this:\n\nWhile custom properties have been in CSS for well-nigh a decade, the interactive W3C validator online doesn't support them. Further, running checks at the command line is faster and more convenient for  me.\nNu HTML checker to the rescue,  almost\nTo make a long story short, there appear to be no easily available CSS checkers that operate from the command line and also support custom properties. But the Nu HTML checker  does work from the command line, and it supports custom properties even though its web-based counterpart  doesn't.\nDownloading a compiled  version\nYou don't have to compile from source. You can get a compiled version of the Nu HTML checker from the validator releases  page.\nAs a Mac user specifically, I used the version at https://github.com/validator/validator/releases/tag/20.6.30  but of course versions change. Your mileage may  vary.\nNu HTML checker did the trick pretty well except for line numbers. It expects an HTML file, which means the CSS errors are displaced. Plus I just wanted to check pure CSS files, not an HTML file. The solution was obviously something along the lines of \"create a temporary HTML file, insert the CSS, and do the  validation.\"\nCreating a one-line HTML  file\nIn order to get the error messages to yield correct line numbers, the answer was to create the temp HTML in a single line, insert the CSS, and run the validation. I created a script that works for Bash or  zsh:\nfile:  v.sh\n\n\n\nYou save that as v.sh  or whatever and make it  executable:\n\n\n\nThen put it on the path if you wish; on my system I placed it in /usr/local/bin :\n\nSo if your file is named layout.css  you'd  invoke:\n\nThe script generates a file with the name hardcoded to VNU_CHECK.HTML  because that name is unlikely to collide with any other filename, so you can put it in .gitignore  or otherwise delete it at will. The inline HTML contains the CSS file so error messages give you the right line  number.\nThe Nu HMTL Checker error messages are that rarest kind, because they are detailed and relevant. I've run it hundreds of times and so far it hasn't been wrong or misleading. Mad props to whoever wrote  it.\n\nWhen you're finished delete VNU_CHECK.HTML .\n{{ inc \"common|mdemo.md\"  }}"}
,
{"path":"/Users/tom/code/tom.im/.pub/articles/free-image-sites-early-2020.html","title":"Free Image Sites, Early 2020 edition","body":"Free Image Sites, Early 2020  edition\nBy Tom Campbell , January 11,  2019\nYou need some great clip art but have a budget of $0. You may even be  working for  a commercial organization. Where do you go? Here's a  list of websites that provide free images, even for commercial  use---with a few exceptions, discussed  below.\nHow free are they? Usually the only thing they ask is a proper  photo credit and that you not use their images to go into competition with  them. Images licensed as public domain or CC0 don't even fall under those modest restrictions, and can be used for any  purpose at  all.\nAre there any other  catches?\nOne legal issue that many of these sites seem to ignore is  that at least in the USA you can't use someone's recognizable  image without their consent. The only legal certainty you have in  this case is if you  are in posession of a model release by  that person, a legal document outlining what rights you have to their  image.\nPractically speaking many of the photographers have obtained  such model releases, but you can't know for sure unless you're in  possession of a signed  copy.\nFree images for commercial  use\nStockSnap.io  is in serious growth mode and  has unusually generous licensing. Its images are in the public domain,  which means you can do anything you want with them, including resell on posters, T-shirts, coffee mugs,  whatever.\nScreen shot of StockSnap.io\nStockSnap.io's public domain licensing is the best they  get\nPexels  is a fan favorite, with some particularly high quality images and a good way of crediting its  creators.\nScreen shot of Pexels home page\nPexels is an O.G. free image site and always provides great  quality\nTaken Photos  acquires hundreds of photos a day, using  machine learning to label them. Their license is CC0, which means you can use the images with no restriction (but they aren't model  released).\nScreen shot of Taken Photos home page\nTaken is newer in the space and also has fantastic licensing  terms\nUnsplash  is another big player and they say their subjects  have signed model  releases.\nScreen shot of Unsplash site\nUnsplash gives you a bit more reassurance that their photographers have signed release  forms\nfreepik  has a good search engine (before to choose  Free), and has a strong emphasis on vector images as well as photos. Not sure why the  vector images default to .EPS format,  however.\nFreepik screenshot for individual picture\nFreepik doesn't seem to require model releases, so I chose a picture that makes the model  unidentifiable\nFree cartoons for commercial  use\nOpen Doodles  wins the coveted \"funkiest free image site\" award in this roundup with its very specific, literally cartoonish sensibility. It's also one  of the most flexible, because their Generator  lets  you design a color scheme for the  images.\nCartoon from Open Doodles\nCustom designed using the Open Doodles Generator by Tom Campbell\nComicgen  from Gramener  is a close competitor to Open Doodles in the funkiness  sweepstakes.\nCartoon of happy coffee mug\nCustom designed using Comicgen by Tom Campbell\nBeware of model  releases\nI was able to verify that one site requires model releases. That's Freerange Stock Now you know why there's only one picture in this article featuring a person with a recognizable face !\nPortrait Of Brown Haired Young Woman In Brown Jacket\nThanks for going the extra mile, Freerange Stock ! Photo by  Bruce Mars\nAdding  credit\nEach site has different requirements for photo credits, some of  them surprisingly relaxed. Whenever possible I like to link right to  the image itself and whenever possibler the photographer's page on the free image  site.\nThere's always catch, but this one isn't too  bad\nWhen can't  you use these  images?\nCollections:  Most, though not all, only have problem with your using the  image in the case where you are competiting with the sites themselves. In other words, don't stockpile copies of all their images and try to start a competiting  site. The license terms on the images normally forbid such  use.\nReselling:  You probably aren't allowed to use these images on things you resell in  bulk, for example, T-shirts or coffee mugs. Check the license terms on each site to be  sure. For example, anything using CC0 licensing is without any  restriction.\nYour Free Image Usage  Checklist\n\n\nIf there's a recognizable face, was a model release  done?\n\nIf credit is required, did you include it? Remember that a direct link may be  needed\n\nIs the image actually available for commercial usage? At time of writing all the sites  here allow it, unless you are bundling huge sets of these images to build a competing  site."}
,
{"path":"/Users/tom/code/tom.im/.pub/articles/index.html","title":"Articles","body":"Articles\nA command-line CSS validator that recognizes custom properties\nFree Image Sites, Early 2020 Edition"}
]
[
{"path":"/Users/tom/code/tom.im/.pub/articles/articles/css-validator-light.html","title":"A Command-line CSS validator for \"modern\" CSS","body":"Theme: {{ .FrontMatter.Theme }}. See this page in dark mode  or go back\n\nA Command-line CSS validator for \"modern\"  CSS\nI am working on a project with hundreds of CSS files to  maintain. Using the web-based W3C CSS Validation Service  stopped being an option when I started to use CSS custom properties, which look like  this:\n\nThey're applied using var  like  this:\n\nWhile custom properties have been in CSS for well-nigh a decade, the interactive W3C validator online doesn't support them. Further, running checks at the command line is faster and more convenient for  me.\nNu HTML checker to the rescue,  almost\nTo make a long story short, there appear to be no easily available CSS checkers that operate from the command line and also support custom properties. But the Nu HTML checker  does work from the command line, and it supports custom properties even though its web-based counterpart  doesn't.\nDownloading a compiled  version\nYou don't have to compile from source. You can get a compiled version of the Nu HTML checker from the validator releases  page.\nAs a Mac user specifically, I used the version at https://github.com/validator/validator/releases/tag/20.6.30  but of course versions change. Your mileage may  vary.\nNu HTML checker did the trick pretty well except for line numbers. It expects an HTML file, which means the CSS errors are displaced. Plus I just wanted to check pure CSS files, not an HTML file. The solution was obviously something along the lines of \"create a temporary HTML file, insert the CSS, and do the  validation.\"\nCreating a one-line HTML  file\nIn order to get the error messages to yield correct line numbers, the answer was to create the temp HTML in a single line, insert the CSS, and run the validation. I created a script that works for Bash or  zsh:\nfile:  v.sh\n\n\n\nYou save that as v.sh  or whatever and make it  executable:\n\n\n\nThen put it on the path if you wish; on my system I placed it in /usr/local/bin :\n\nSo if your file is named layout.css  you'd  invoke:\n\nThe script generates a file with the name hardcoded to VNU_CHECK.HTML  because that name is unlikely to collide with any other filename, so you can put it in .gitignore  or otherwise delete it at will. The inline HTML contains the CSS file so error messages give you the right line  number.\nThe Nu HMTL Checker error messages are that rarest kind, because they are detailed and relevant. I've run it hundreds of times and so far it hasn't been wrong or misleading. Mad props to whoever wrote  it.\n\nWhen you're finished delete VNU_CHECK.HTML .\n{{ inc \"common|mdemo.md\"  }}"}
,
{"path":"/Users/tom/code/tom.im/.pub/articles/articles/css-validator.html","title":"A Command-line CSS validator for \"modern\" CSS","body":"Theme: {{ .FrontMatter.Theme }}. See this page in light mode  or go back\n\nA Command-line CSS validator for \"modern\"  CSS\nI am working on a project with hundreds of CSS files to  maintain. Using the web-based W3C CSS Validation Service  stopped being an option when I started to use CSS custom properties, which look like  this:\n\nThey're applied using var  like  this:\n\nWhile custom properties have been in CSS for well-nigh a decade, the interactive W3C validator online doesn't support them. Further, running checks at the command line is faster and more convenient for  me.\nNu HTML checker to the rescue,  almost\nTo make a long story short, there appear to be no easily available CSS checkers that operate from the command line and also support custom properties. But the Nu HTML checker  does work from the command line, and it supports custom properties even though its web-based counterpart  doesn't.\nDownloading a compiled  version\nYou don't have to compile from source. You can get a compiled version of the Nu HTML checker from the validator releases  page.\nAs a Mac user specifically, I used the version at https://github.com/validator/validator/releases/tag/20.6.30  but of course versions change. Your mileage may  vary.\nNu HTML checker did the trick pretty well except for line numbers. It expects an HTML file, which means the CSS errors are displaced. Plus I just wanted to check pure CSS files, not an HTML file. The solution was obviously something along the lines of \"create a temporary HTML file, insert the CSS, and do the  validation.\"\nCreating a one-line HTML  file\nIn order to get the error messages to yield correct line numbers, the answer was to create the temp HTML in a single line, insert the CSS, and run the validation. I created a script that works for Bash or  zsh:\nfile:  v.sh\n\n\n\nYou save that as v.sh  or whatever and make it  executable:\n\n\n\nThen put it on the path if you wish; on my system I placed it in /usr/local/bin :\n\nSo if your file is named layout.css  you'd  invoke:\n\nThe script generates a file with the name hardcoded to VNU_CHECK.HTML  because that name is unlikely to collide with any other filename, so you can put it in .gitignore  or otherwise delete it at will. The inline HTML contains the CSS file so error messages give you the right line  number.\nThe Nu HMTL Checker error messages are that rarest kind, because they are detailed and relevant. I've run it hundreds of times and so far it hasn't been wrong or misleading. Mad props to whoever wrote  it.\n\nWhen you're finished delete VNU_CHECK.HTML .\n{{ inc \"common|mdemo.md\"  }}"}
,
{"path":"/Users/tom/code/tom.im/.pub/articles/articles/free-image-sites-early-2020.html","title":"Free Image Sites, Early 2020 edition","body":"Free Image Sites, Early 2020  edition\nBy Tom Campbell , January 11,  2019\nYou need some great clip art but have a budget of $0. You may even be  working for  a commercial organization. Where do you go? Here's a  list of websites that provide free images, even for commercial  use---with a few exceptions, discussed  below.\nHow free are they? Usually the only thing they ask is a proper  photo credit and that you not use their images to go into competition with  them. Images licensed as public domain or CC0 don't even fall under those modest restrictions, and can be used for any  purpose at  all.\nAre there any other  catches?\nOne legal issue that many of these sites seem to ignore is  that at least in the USA you can't use someone's recognizable  image without their consent. The only legal certainty you have in  this case is if you  are in posession of a model release by  that person, a legal document outlining what rights you have to their  image.\nPractically speaking many of the photographers have obtained  such model releases, but you can't know for sure unless you're in  possession of a signed  copy.\nFree images for commercial  use\nStockSnap.io  is in serious growth mode and  has unusually generous licensing. Its images are in the public domain,  which means you can do anything you want with them, including resell on posters, T-shirts, coffee mugs,  whatever.\nScreen shot of StockSnap.io\nStockSnap.io's public domain licensing is the best they  get\nPexels  is a fan favorite, with some particularly high quality images and a good way of crediting its  creators.\nScreen shot of Pexels home page\nPexels is an O.G. free image site and always provides great  quality\nTaken Photos  acquires hundreds of photos a day, using  machine learning to label them. Their license is CC0, which means you can use the images with no restriction (but they aren't model  released).\nScreen shot of Taken Photos home page\nTaken is newer in the space and also has fantastic licensing  terms\nUnsplash  is another big player and they say their subjects  have signed model  releases.\nScreen shot of Unsplash site\nUnsplash gives you a bit more reassurance that their photographers have signed release  forms\nfreepik  has a good search engine (before to choose  Free), and has a strong emphasis on vector images as well as photos. Not sure why the  vector images default to .EPS format,  however.\nFreepik screenshot for individual picture\nFreepik doesn't seem to require model releases, so I chose a picture that makes the model  unidentifiable\nFree cartoons for commercial  use\nOpen Doodles  wins the coveted \"funkiest free image site\" award in this roundup with its very specific, literally cartoonish sensibility. It's also one  of the most flexible, because their Generator  lets  you design a color scheme for the  images.\nCartoon from Open Doodles\nCustom designed using the Open Doodles Generator by Tom Campbell\nComicgen  from Gramener  is a close competitor to Open Doodles in the funkiness  sweepstakes.\nCartoon of happy coffee mug\nCustom designed using Comicgen by Tom Campbell\nBeware of model  releases\nI was able to verify that one site requires model releases. That's Freerange Stock Now you know why there's only one picture in this article featuring a person with a recognizable face !\nPortrait Of Brown Haired Young Woman In Brown Jacket\nThanks for going the extra mile, Freerange Stock ! Photo by  Bruce Mars\nAdding  credit\nEach site has different requirements for photo credits, some of  them surprisingly relaxed. Whenever possible I like to link right to  the image itself and whenever possibler the photographer's page on the free image  site.\nThere's always catch, but this one isn't too  bad\nWhen can't  you use these  images?\nCollections:  Most, though not all, only have problem with your using the  image in the case where you are competiting with the sites themselves. In other words, don't stockpile copies of all their images and try to start a competiting  site. The license terms on the images normally forbid such  use.\nReselling:  You probably aren't allowed to use these images on things you resell in  bulk, for example, T-shirts or coffee mugs. Check the license terms on each site to be  sure. For example, anything using CC0 licensing is without any  restriction.\nYour Free Image Usage  Checklist\n\n\nIf there's a recognizable face, was a model release  done?\n\nIf credit is required, did you include it? Remember that a direct link may be  needed\n\nIs the image actually available for commercial usage? At time of writing all the sites  here allow it, unless you are bundling huge sets of these images to build a competing  site."}
,
{"path":"/Users/tom/code/tom.im/.pub/articles/articles/index.html","title":"Articles","body":"Articles\nA command-line CSS validator that recognizes custom properties\nFree Image Sites, Early 2020 Edition"}
]
